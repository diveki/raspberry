# setup vnc
https://www.raspberrypi.org/documentation/remote-access/vnc/
Menu/Preferences/Raspberry Pi Configuration/Interfaces -> enable all


pip install --upgrade pip
pip install ipython
nano .bashrc
export PATH="/home/pi/.local/bin:$PATH"

pip install numpy
pip install --upgrade numpy
pip install matplotlib
pip install Flask
pip install Unidecode
# in windows for chapter 5 ffmpeg program is needed

sudo apt install python3-gpiozero
sudo apt-get install --yes libatlas-base-dev gfortran
pip install scipy
pip install RPi.GPIO
pip install gpiozero
sudo pip install tweepy
sudo pip install cloud4rpi

##### Thermisztorok
  Raspbian Buster vagy fiatalabb verzi
pip install spidev
pip install adafruit-blinka
pip install adafruit-circuitpython-dht
sudo apt-get install libgpiod2
A terminalba gepeljük be, hogy ls -l /dev/spi* ; ha latszik a /dev/spidev0.0 és /dev/spidev0.1 akkor minden rendben van.

A One-Wire protokol aktivalasa a Raspberry Pi-n

1) terminalban irjuk be, hogy sudo nano /boot/config.txt, majd a megnyitott fajl utolso soraba irjuk be a kovetkezot:

2) dtoverlay=w1-gpio

3) Nano editor becsuk,  Raspberry Pi-t ujrainditani,a terminalba sudo reboot.

4) Ujrainditas utan nyissunk ki ujra egy terminalt es gepeljuk be: sudo modprobe w1-gpio

5) Aztan: sudo modprobe w1-therm

6) Ezutan mennyunk at abba a mappaba, ahova a kulso eszkozok talalhatok: cd /sys/bus/w1/devices

7)  ls.  itt egy mappa ami hasonlit a 28-XXXXXXXXXXXX  A 28 a szenzor csalad azonoso. A DS1820 és DS18S20 csalad azonositoja 10, valamint a DS1822 azonositoja a 22. 

8) A mappaban kell, hogy legyen egy w1_slave nevu fajl, megtekintsuk a tartalmat, gepeljuk be, hogy cat w1_slave
#################################




# installing pygame
# on a raspberry pygame is installed in principle


# opencv
pip is enough to install but in case needed I leave a more detailed version here
install libraries

https://qengineering.eu/install-opencv-4.5-on-raspberry-pi-4.html
https://www.scivision.dev/anaconda-python-opencv3/
https://github.com/ys7yoo/PiOpenCV

####################################################
sudo nano /sbin/dphys-swapfile
sudo nano /etc/dphys-swapfile
sudo reboot

sudo apt-get update
sudo apt-get upgrade
sudo apt-get install cmake gfortran
sudo apt-get install python3-dev python3-numpy
sudo apt-get install libjpeg-dev libtiff-dev libgif-dev
sudo apt-get install libavcodec-dev libavformat-dev libswscale-dev
sudo apt-get install libgtk2.0-dev libcanberra-gtk*
sudo apt-get install libxvidcore-dev libx264-dev libgtk-3-dev
sudo apt-get install libtbb2 libtbb-dev libdc1394-22-dev libv4l-dev
sudo apt-get install libopenblas-dev libatlas-base-dev libblas-dev
sudo apt-get install libjasper-dev liblapack-dev libhdf5-dev
sudo apt-get install protobuf-compiler
# The latest Debian 11, Bullseye don't support python2 full
# don't try to install if you're having a Raspberry Bullseye OS
sudo apt-get install python-dev python-numpy
sudo apt-get install qt5-default # ?

pip install opencv-contrib-python

# check your memory first
free -m
# you need at least a total of 6.5 GB!
# if not, enlarge your swap space as explained earlier
# download the latest version
cd ~
wget -O opencv.zip https://github.com/opencv/opencv/archive/4.5.4.zip
wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/4.5.4.zip
# unpack
unzip opencv.zip
unzip opencv_contrib.zip
# some administration to make live easier later on
mv opencv-4.5.4 opencv
mv opencv_contrib-4.5.4 opencv_contrib
# clean up the zip files
rm opencv.zip
rm opencv_contrib.zip

cd ~/opencv/
mkdir build
cd build

https://raspberrypi.stackexchange.com/questions/124226/install-pygame-with-miniconda3-on-raspberry-pi-4

https://stackoverflow.com/questions/67195527/install-pygame-with-miniconda3-on-raspberry-pi-4


################################

cmake -D CMAKE_BUILD_TYPE=RELEASE \
-D CMAKE_INSTALL_PREFIX=$(python -c "import sys; print(sys.prefix)") \
-D OPENCV_EXTRA_MODULES_PATH=~/opencv_contrib/modules \
-D ENABLE_NEON=ON \
-D ENABLE_VFPV3=ON \
-D PYTHON3_EXECUTABLE=$(python -c "import sys; print(sys.executable)") \
-D PYTHON3_INCLUDE_DIR=$(python -c "import sysconfig; print(sysconfig.get_config_var('INCLUDEPY'))") \
-D PYTHON3_PACKAGES_PATH=$(python -c "import sysconfig; print(sysconfig.get_config_var('LIBDEST'))") \
-D PYTHON_DEFAULT_EXECUTABLE=$(which python3) \
-D PYTHON3_LIBRARY=$(python -c "import sysconfig; print('%s/%s' % (sysconfig.get_config_var('LIBDIR'), sysconfig.get_config_var('INSTSONAME')))") \
-D PYTHON_LIBRARY=$(python -c "import sysconfig; print('%s/%s' % (sysconfig.get_config_var('LIBDIR'), sysconfig.get_config_var('INSTSONAME')))") \
-D BUILD_TESTS=OFF \
-D WITH_EIGEN=OFF \
-D WITH_V4L=ON \
-D WITH_LIBV4L=ON \
-D OPENCV_ENABLE_NONFREE=ON \
-D INSTALL_C_EXAMPLES=OFF \
-D INSTALL_PYTHON_EXAMPLES=OFF \
-D BUILD_NEW_PYTHON_SUPPORT=ON \
-D BUILD_opencv_python3=ON \
-D BUILD_opencv_python2=OFF \
-D OPENCV_GENERATE_PKGCONFIG=ON \
-D BUILD_EXAMPLES=OFF ..

#################
